import * as Yup from 'yup';

const validationSchema = Yup.object().shape({
  name: Yup.string(),
  email: Yup.string().email(),
});

// Simulate the API response error
const apiErrorResponse = {
  errors: {
    name: 'Name is required',
    email: 'Invalid email format',
  },
};

// Transform API response errors into Yup validation errors
const yupErrors = {};
Object.keys(apiErrorResponse.errors).forEach(field => {
  yupErrors[field] = apiErrorResponse.errors[field];
});

// Perform Yup validation with the updated error messages
const dataToValidate = {
  name: '',
  email: 'invalid_email',
};

validationSchema
  .validate(dataToValidate, { abortEarly: false })
  .catch(yupValidationErrors => {
    // Merge Yup validation errors with API response errors
    const mergedErrors = { ...yupValidationErrors.errors, ...yupErrors };
    console.log(mergedErrors);
  });
