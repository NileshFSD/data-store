// Object to store the last call timestamps for APIs
const lastCallTimestamps = {};

function allowApiCall(apiName) {
    /**
     * Determines whether an API call is allowed based on a 1-minute interval.
     *
     * @param {string} apiName - Name of the API being called.
     * @returns {boolean} - True if the API call is allowed, False otherwise.
     */
    const currentTime = Date.now(); // Current time in milliseconds

    if (lastCallTimestamps[apiName]) {
        const elapsedTime = (currentTime - lastCallTimestamps[apiName]) / 1000; // Convert to seconds
        if (elapsedTime < 60) {
            console.log(`API call to '${apiName}' denied. Please wait ${Math.ceil(60 - elapsedTime)} seconds.`);
            return false;
        }
    }

    // Allow the API call and set the timestamp
    lastCallTimestamps[apiName] = currentTime;
    console.log(`API call to '${apiName}' allowed.`);

    // Schedule removal of the API name from the object after 1 minute
    setTimeout(() => {
        delete lastCallTimestamps[apiName];
        console.log(`Removed '${apiName}' from lastCallTimestamps.`);
    }, 60000); // 1 minute in milliseconds

    return true;
}

// Example usage
const apiName = "exampleApi";

allowApiCall(apiName); // First call, should be allowed
setTimeout(() => allowApiCall(apiName), 30000); // After 30 seconds, should be denied
setTimeout(() => allowApiCall(apiName), 70000); // After 70 seconds, should be allowed (because it's been removed)
