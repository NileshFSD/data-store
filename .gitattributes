// Func to get value between variable curly braces

  function checkIsNumVar(variable: string) {

    let isNum = true;

    let value = variable.replace(/{{|}}/g, '').trim();

    if (/^[A-Za-z]+$/.test(value)) isNum = false;



    return isNum;

  }



 const updateContent = (name: string, value: string) => {

    setValue(name as any, value, { shouldDirty: true, shouldValidate: true });

    const availVars = tContent.match(/{{[0-9a-zA-Z]+}}/g);

    const splitTContent = tContent.split(/{{[0-9a-zA-Z]+}}/);

    let tempContent = "";



    for (let i = 0; i < splitTContent.length - 1; i++) {

      tempContent += splitTContent[i];

      if (name == `var${i}` && value?.length == 0) {

        const isNum = checkIsNumVar(availVars?.[i])

        if (isNum) tempContent += `<b>{{${i + 1}}}</b>`;

        else tempContent += `<b>${availVars[i]}</b>`;

      } else if (getValues(`var${i}` as any)?.length == 0) {

        const isNum = checkIsNumVar(availVars?.[i])

        if (isNum) tempContent += `<b>{{${i + 1}}}</b>`;

        else tempContent += `<b>${availVars[i]}</b>`;

      } else if (name == `var${i}`) tempContent += `<b>${value}</b>`;

      else if (getValues(`var${i}` as any) == undefined) {

        const isNum = checkIsNumVar(availVars?.[i])

        if (isNum) tempContent += `<b>{{${i + 1}}}</b>`;

        else tempContent += `<b>${availVars[i]}</b>`;

      } else tempContent += `<b>${getValues(`var${i}` as any)}</b>`;

    }



    if (splitTContent.length > 0)

      tempContent += splitTContent[splitTContent.length - 1];



    setContent(tempContent);

  };


